'''
Завдання 2

Необхідно створити функцію generator_numbers, яка буде аналізувати текст, ідентифікувати всі 
дійсні числа, що вважаються частинами доходів, і повертати їх як генератор. Дійсні числа у тексті 
записані без помилок, чітко відокремлені пробілами з обох боків. Також потрібно реалізувати 
функцію sum_profit, яка буде використовувати generator_numbers для підсумовування цих чисел і 
обчислення загального прибутку.

'''
# Импортируем для использования регулярных выражений
import re

# Заданный текст
TEXT = "Загальний дохід працівника складається з декількох частин: 1000.01 як \
    основний дохід, доповнений додатковими надходженнями 27.45 і 324.00 доларів." 

# Генератор для последовательного получения чисел, корые отделены пробелами
def generator_numbers(text: str):
    pattern = r'\s+\d+\.\d+\s'
    nums = re.findall(pattern, text)
    for _ in nums:
        yield _
    
def sum_profit(text: str, func: callable):
    num = func(text) # Инициируем объект генератор
    sum = 0 # Резеврвируем переменную для суммы

    # Вызываем генератор, пока не закончатся значения
    while True:
        try:
            # Суммирование значений, которые превращаем в число с плавающей точкой.
            sum += float(next(num))
        except StopIteration as e:
            break
            
    return sum # Когда итерации кончились, вернем сумму

total_income = sum_profit(TEXT, generator_numbers)
print(f"Загальний дохід: {total_income}")